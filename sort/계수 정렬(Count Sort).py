# 계수 정렬(Count Sort)
# 특정한 조건이 부합할 때만 사용할 수 있지만 빠른 정렬 알고리즘이다.


# 데이터 개수: N, 데이터 중 최댓값이 K일 때, 계수 정렬은 최악의 경우에도 수행 시간 O(N+K)를 보장한다.

# 초기 단계
# 7 5 9 0 3 1 6 2 9 1 4 8 0 5 2

# 예시) step1. 7이 1번 등장
# 0 1 2 3 4 5 6 7 8 9 
# 0 0 0 0 0 0 0 1 0 0

# 계수 정렬 소스코드
# 모든 원소의 값이 0보다 크거나 같다고 가정
array = [7, 5, 9, 0, 3, 1, 6, 2, 9, 1, 4, 8, 0, 5, 2]

# 모든 범위를 포함하는 리스트 선언(모든 값은 0으로 초기화)
count = [0] * (max(array) + 1)

for i in range(len(array)):
    count[array[i]] += 1 # 각 데이터에 해당하는 인덱스의 값 증가

for i in range(len(count)): # 리스트에 기록된 정렬 정보 확인
    for j in range(count[i]):
        print(i, end=' ') # 띄어쓰기를 구분으로 등장한 횟수만큼 인덱스 출력

# 출력: 0 0 1 1 2 2 3 4 5 5 6 7 8 9 9 

# 계수 정렬의 시간, 공간 복잡도
# 빅오표기법: O(N + K)

# 빠르다.

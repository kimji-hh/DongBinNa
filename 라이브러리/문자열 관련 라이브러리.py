a.startswith(b)
# String a 안에 b 문자열이 포함되어있는지 확인 T or F

“”.join(array)  
# 리스트를 [], 없이 출력
#####################################################################
input()
# 입력: h i m e l l o 이렇게 저장

list(input().split())
list(map(str, input().split()))

# 입력 : hi mello
# 같은 결과 : hi 저장 mello 저장

#####################################################################

strip() 
# 문자열 공백 제거
>>> ex_str = "                   hello         "
>>> ex_str.strip()

# 'hello'로 출력

map(int, input().strip().split(' '))

#####################################################################
split() 
# 공백을 기준으로 분리하여 저장
 
routes = ["E 2", "S 2", "W 1"]

for r in routes:
    r1,r2 = r.split()
#####################################################################
from collections import deque

# queue는 왼쪽부터 데이터가 쌓인다.
queue.appendleft() : 맨 left에 데이터 추가
queue.popleft(): 맨 left 삭제 후 반환

queue.append(): left에서부터 데이터 추가
queue.pop(): left에서부터 데이터 삭제 후 반환
#####################################################################
# 원하는 데이터의 index 알아내기
index() : 숫자 등
find() : 문자열. list 내 문자열.find() 가능
#####################################################################
chr(숫자)
# 아스키코드를 문자로 변환

set(집합) 함수
>>> s = set([1, 3, 5, 7])
>>> s
{1, 3, 5, 7}
# set 생성자 없이 바로 중괄호로 넣어도 된다 p = {1, 3, 5, 7}
# 중복된 값은 자동으로 중복이 제거된다.
# 순서가 없다. 어떤 값이 먼저 나올 지 알 수 없다.


